<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="iconHome.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAD8aUNDUGljYwAAKM9jYGCSYAACFgMGhty8kqIgdyeFiMgoBQYkkJhc
        XMCAGzAyMHy7BiIZGC7rMpAOOFNSi5OB9AcgLikCWg40MgXIFkmHsCtA7CQIuwfELgoJcgayFwDZGulI
        7CQkdnlJQQmQfQKkPrmgCMS+A2Tb5OaUJiPczcCTmhcaDKQjgFiGoZghiMGdwYmBygARnvmLGBgsvjIw
        ME9AiCXNZGDY3srAIHELIaYC9AN/CwPDtvMFiUWJYCEWIGZKS2Ng+LScgYE3koFB+AIDA1c0ph2IuMDh
        VwWwX90Z8oEwnSGHIRUo4smQx5DMoAdkGTEYMBgymAEAkqVAs8gzfOwAAAAJcEhZcwAACwwAAAsMAT9A
        IsgAAAAHdElNRQfnBwEQAQG/M5hIAAADnUlEQVRIS+2WyU5UQRSGq5uAsgDjwgSQqNHEaYEJYY2y4QFU
        XCiJD+CAO4dgSO9gqyTE1oWgETqaJiILBdI0CM08z/PMhofA/6tUkxZCaAGjC05y0vee+oequnXPbXMU
        /2309/eb3t5eMzY2ZrOnp8f09fW50b8QXq/XDA0NmcHBQVNdXe0ZHR3NImtqajwDAwN2LCEhwaEPKSoq
        KuzqhoeHTSQSSRwfH388MTHRrozouqi9vT2RMTDl5eWOdcBoamoys7OzRqtjm1NkVCrDBplkq5bNtWpl
        WnUKGLANDQ2Ovc8Ih8Nmc3PTSJzVpuv3vTIgg7PUyJGREa4DykowmoTlwN1XdHd3m5aWFjM9PY34VQnX
        S/S1nuVJxBcXF83y8rLdXj13aq/AgJ2ZmbHcrq4upxZncFA4vYhLOFeCLRJ+odN8nO3UvQkEAqaqqiq6
        ak73MWGegxUmd2lpyWpwGPeMwsJCK8JBYbskVCAhDtD9+vp6D3XG/X6/Yxjj8/ksnskGg0EPWMe5gwZ1
        xnNychxjW4hkZ8+KtEWc3KLJycmf+s1fWVmxM0fE4/E4xu/BGJjV1VUmnA9XekWdnZ2J0V1ih3aEXgkI
        rOiEQKUiftf9NZ4Xz5t3da9ga3mucPSIsqTzQ1mGJtqhUMghY0Izs4dFgAcy/STieWWm7pMgxRtgZZak
        VWbK8IKuq1V7tL6+btra2hwqJjCWIVudpkxVGzwlUlAJ2aH2DrCOE0RD5qnKtKmpKburO6KjoyNqbLdV
        25YhcrNqF6PGlZWVZn5+3vZn+jVJn6ZWW1trMc74Elw00JKxwbi1tdVidg0niHEo1piuxOQk4JVoskST
        1UK91BgjnDGckDDpf/QB2c2YZqHZn9F9hfKbsk75RrVzjBFgHQfjjEMxZrt0/VD5WY/khvK6rr/o8DyJ
        XfGBjCFBRkRp6xgrn+m+xF1jUqLVvqTLERgr97/Vexj75ubmos/ct90YjjM+9BXvagwWzqEYswqdXisq
        46eYYUqH4lrGxQsLC/Y9dZgtY7TiDmapV4Xvb1gH5wr9l4a/traGcPF2Y2F8Gxsblkv3E++yshkNmdt6
        XAFYmSzyRwnXKf3Kt8p3qvHluem2HZNbqncy5jBgv6r+gfecBhJ3ICgyXey0fgt0f9flPZnmSSwp+rnT
        F4lensdYFCfObcfdaixxRWNjo+Hw0BQgS2wrtZKtbyytkF9qsRg4cDHlP9tR/MMw5hckzU7EvpLRxQAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>